{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","quote","author","handleClick","bind","handleClick2","quoteText","document","getElementById","a","fetch","resp","json","dataObj","quotes","randomNum","Math","ceil","random","setState","length","classList","add","remove","myFetchFunc","this","twitterUrl","window","open","className","id","onClick","title","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"mQA6DeA,E,kDAzDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,MAAO,GAAIC,OAAQ,IACjC,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJH,E,+CAMnB,WAAe,IAAD,OACNE,EAAYC,SAASC,eAAe,UAC3B,uCAAG,sCAAAC,EAAA,sEACCC,MAAM,0IADP,cACZC,EADY,gBAEIA,EAAKC,OAFT,OAEZC,EAFY,OAGZC,EAASD,EAAQC,OACjBC,EAAYC,KAAKC,KAAqB,IAAhBD,KAAKE,UAC3BjB,EAAQa,EAAOC,GAAWd,MAC1BC,EAASY,EAAOC,GAAWb,OAC/B,EAAKiB,SAAS,CACZlB,MAAOA,EACPC,OAAQA,IAEND,EAAMmB,OAAS,IACjBd,EAAUe,UAAUC,IAAI,cAExBhB,EAAUe,UAAUE,OAAO,cAdb,4CAAH,qDAiBfC,K,+BAEF,WACEC,KAAKtB,gB,0BAEP,WACE,IAAMuB,EAAU,gDAA4CD,KAAKzB,MAAMC,MAAvD,cAAkEwB,KAAKzB,MAAME,QAC7FyB,OAAOC,KAAKF,EAAY,Y,oBAE1B,WACE,OACE,qBAAKG,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAkBC,GAAG,kBAApC,UACE,sBAAKD,UAAU,aAAf,UACI,mBAAGA,UAAU,sBACb,sBAAMC,GAAG,QAAT,SAAkBL,KAAKzB,MAAMC,WAEjC,qBAAK4B,UAAU,eAAf,SACI,sBAAMC,GAAG,SAAT,SAAmBL,KAAKzB,MAAME,WAElC,sBAAK2B,UAAU,mBAAf,UACI,wBAAQE,QAASN,KAAKpB,aAAcwB,UAAU,iBAAiBC,GAAG,UAAUE,MAAM,cAAlF,SACI,mBAAGH,UAAU,qBAEjB,wBAAQE,QAASN,KAAKtB,YAAa2B,GAAG,YAAtC,mC,GAlDIG,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,EAAD,IACAtC,SAASC,eAAe,SAG1B2B,M","file":"static/js/main.481947ee.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {quote: \"\", author: \"\"};\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClick2 = this.handleClick2.bind(this);\n  }\n  handleClick() {\n    const quoteText = document.getElementById('quote');\n    let myFetchFunc = async () => {\n      let resp = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n      let dataObj = await resp.json();\n      let quotes = dataObj.quotes;\n      let randomNum = Math.ceil(Math.random() * 100);\n      let quote = quotes[randomNum].quote;\n      let author = quotes[randomNum].author;\n      this.setState({\n        quote: quote,\n        author: author\n      });\n      if (quote.length > 120) {\n        quoteText.classList.add('long-quote');\n      } else {\n        quoteText.classList.remove('long-quote');\n      }\n    }\n    myFetchFunc();\n  }\n  componentDidMount() {\n    this.handleClick();\n  }\n  handleClick2() {\n    const twitterUrl = `https://twitter.com/intent/tweet?text=${this.state.quote} - ${this.state.author}`;\n    window.open(twitterUrl, '_blank');\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"quote-container\" id=\"quote-container\">\n          <div className=\"quote-text\">\n              <i className=\"fas fa-quote-left\"></i>\n              <span id=\"quote\">{this.state.quote}</span>\n          </div>\n          <div className=\"quote-author\">\n              <span id=\"author\">{this.state.author}</span>\n          </div>\n          <div className=\"button-container\">\n              <button onClick={this.handleClick2} className=\"twitter-button\" id=\"twitter\" title=\"Tweet This!\">\n                  <i className=\"fab fa-twitter\"></i>\n              </button>\n              <button onClick={this.handleClick} id=\"new-quote\">New Quote</button>\n          </div>\n        </div>  \n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}